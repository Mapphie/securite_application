"""
Django settings for shop_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!dv7%ldbzz#7^mu2b09q=4b8-n&$d327xxokh0c72795xbs%_s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shop_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        'autoescape': False,
        },
    },
]

WSGI_APPLICATION = 'shop_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'xss_shop',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# ✅ CONFIGURATION DES COOKIES SÉCURISÉS
SESSION_COOKIE_HTTPONLY = True      # Empêche l'accès JavaScript aux cookies de session
SESSION_COOKIE_SECURE = False       # True en HTTPS uniquement
SESSION_COOKIE_SAMESITE = 'Lax'     # Protection CSRF supplémentaire

CSRF_COOKIE_HTTPONLY = True         # Empêche l'accès JavaScript au token CSRF
CSRF_COOKIE_SECURE = False          # True en HTTPS uniquement
CSRF_COOKIE_SAMESITE = 'Lax'

# ✅ EN-TÊTES DE SÉCURITÉ
SECURE_BROWSER_XSS_FILTER = True    # Active le filtre XSS du navigateur
SECURE_CONTENT_TYPE_NOSNIFF = True  # Empêche le MIME-type sniffing
X_FRAME_OPTIONS = 'DENY'            # Empêche l'inclusion en iframe

# ✅ CONTENT SECURITY POLICY
CSP_DEFAULT_SRC = "'self'"
CSP_SCRIPT_SRC = "'self'"           # Seuls les scripts du même domaine
CSP_STYLE_SRC = "'self' 'unsafe-inline' https://cdnjs.cloudflare.com"
CSP_IMG_SRC = "'self' data:"
CSP_FONT_SRC = "'self' https://cdnjs.cloudflare.com"
CSP_CONNECT_SRC = "'self'"
CSP_FRAME_ANCESTORS = "'none'"       # Équivalent à X-Frame-Options: DENY


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Configuration des sessions (VULNÉRABLE pour le TP)
SESSION_COOKIE_HTTPONLY = False  # Permet l'accès JavaScript aux cookies
SESSION_COOKIE_SECURE = False    # Permet transmission HTTP non sécurisé

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration de logging pour détecter les XSS
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'xss_attacks.log',
        },
    },
    'loggers': {
        'xss_detection': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}


# Logging des violations CSP
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'security.log',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'security': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}